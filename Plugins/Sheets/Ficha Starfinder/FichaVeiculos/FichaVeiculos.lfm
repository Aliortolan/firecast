<?xml version="1.0" encoding="UTF-8"?>
<form name="frmFichaVeiculos" formType="sheetTemplate" dataType="Ambesek.Starfinder.Veiculos" title="Ficha Starfinder (Veículos)" align="client" theme="dark">
    <style>
        label {
                textTrimming: none;
        }
        button {
                textTrimming: none;
        }
    </style> 
    <script>
        <![CDATA[
        local function isNewVersion(installed, downloaded)
            local installedVersion = {};
            local installedIndex = 0;
            for i in string.gmatch(installed, "[^%.]+") do
                installedIndex = installedIndex +1;
                installedVersion[installedIndex] = i;
            end

            local downloadedVersion = {};
            local downloadedIndex = 0;
            for i in string.gmatch(downloaded, "[^%.]+") do
                downloadedIndex = downloadedIndex +1;
                downloadedVersion[downloadedIndex] = i;
            end

            for i=1, math.min(installedIndex, downloadedIndex), 1 do 
                if (tonumber(installedVersion[i]) or 0) > (tonumber(downloadedVersion[i]) or 0) then
                    return false;
                elseif (tonumber(installedVersion[i]) or 0) < (tonumber(downloadedVersion[i]) or 0) then
                    return true;
                end;
            end;

            if downloadedIndex > installedIndex then
                return true;
            else
                return false;
            end;
        end;
        local function findPopup(myPop)
            local pop = self:findControlByName(myPop);
                
            if pop ~= nil and sheet ~= nil then
                pop:setNodeObject(sheet);
                pop:showPopupEx("center", self);
            elseif pop == nil then
                showMessage("Ops, bug.. nao encontrei o popup para exibir");
            end;                
        end;

        local function rollDanoExtra(atk, num, max)
            if atk[num].crit then
                local rolagem = Firecast.interpretarRolagem(atk[num].dano);

                atk[num].mesa.activeChat:rolarDados(rolagem, "Dano Extra " .. num .. " com " .. atk[num].nome .. " de " .. (sheet.nome or "Veículo"), 
                    function (rolado)
                        if num < max then
                            rollDanoExtra(atk,num+1,max);
                        end;
                    end);
            elseif num<max then
                rollDanoExtra(atk, num+1, max);
            end;
        end;

        local function rollCrit(atk, num, max)
            local dado = atk[num].rolAtk.ops[1].resultados[1];
            if dado == 20 and num==max then
                -- Auto Crit + Fim de Fase
                atk[num].crit = true;
                rollDanoExtra(atk, 1, max);
            elseif dado == 20 then
                -- Auto Crit
                atk[num].crit = true;
                rollCrit(atk, num+1, max);
            elseif dado >= atk[num].margem then
                -- Confirmar Crit
                local rolagem = Firecast.interpretarRolagem("1d20 + " .. atk[num].bonus);

                atk[num].mesa.activeChat:rolarDados(rolagem, "Confirmação de Crítico " .. num .. " com " .. atk[num].nome .. " de " .. (sheet.nome or "Veículo"), 
                    function (rolado)
                        atk[num].crit = true;

                        if num == max then
                            rollDanoExtra(atk,1,max);
                        else
                            rollCrit(atk,num+1,max);
                        end;
                    end);
            elseif num == max then
                rollDanoExtra(atk, 1, max);
            else
                rollCrit(atk, num+1,max);
            end;
        end;

        local function rollDano(atk, num, max)
            local dado = atk[num].rolAtk.ops[1].resultados[1];
            if dado == 1 and num == max then
                rollCrit(atk, 1, max);
            elseif dado == 1 then
                rollDano(atk, num+1, max);
            else
                local rolagem = Firecast.interpretarRolagem(atk[num].dano);

                atk[num].mesa.activeChat:rolarDados(rolagem, "Dano " .. num .. " com " .. atk[num].nome .. " de " .. (sheet.nome or "Veículo"), 
                    function (rolado)
                        if num == max then
                            rollCrit(atk,1,max);
                        else
                            rollDano(atk,num+1,max);
                        end;
                    end);
            end;
        end;

        local function rollAtaque(atk, num, max)
            local rolagem = Firecast.interpretarRolagem("1d20 + " .. atk[num].bonus);

            atk[num].mesa.activeChat:rolarDados(rolagem, "Ataque " .. num .. " com " .. atk[num].nome .. " de " .. (sheet.nome or "Veículo"), 
                function (rolado)
                    atk[num].rolAtk = rolado;

                    if num == max then
                        rollDano(atk,1,max);
                    else
                        rollAtaque(atk,num+1,max);
                    end;
                end);
        end;

        local function prepareAtaque()
            if sheet.piloto == nil then return end
            if sheet==nil then return end

            local armas = NDB.getChildNodes(sheet.listaAtaqs)
            if #armas < 1 then return end
            local atk = {}
            local index = 0
            local mesa = Firecast.getMesaDe(sheet)

            -- Penalidades ou bonus por ataque em movimento vs parado
            local pen = 0;
            local ataquePen = tonumber(sheet.ataquePen) or 0
            if sheet.atkTotal and ataquePen < 0 then
                pen = ataquePen;
            elseif not sheet.atkTotal and ataquePen > 0 then
                pen = ataquePen;
            end;
            -- Destreza do piloto
            local des = 0
            if sheet.piloto then
                des = tonumber(sheet.piloto.efetModDes) or 0
            end

            -- Penalides por dano na estrutura
            local qPen = 0
            local qPenDano = ""
            if sheet.quebrado then
                qPen = -2
                qPenDano = "-2"
            end;

            -- Bonus temporarios
            local tempAtaq = tonumber(sheet.tempAtaque) or 0
            local tempDano = sheet.tempDano or ""

            for i=1, #armas, 1 do
                if armas[i].ativo then
                    index = index + 1
                    atk[index] = {}
                    atk[index].mesa = mesa
                    atk[index].bonus = (tonumber(armas[i].ataque) or 0) + pen + des + qPen + tempAtaq
                    atk[index].dano = (armas[i].dano or "1d1") .. qPenDano .. tempDano
                    atk[index].nome = armas[i].nome or "arma"
                    atk[index].margem = tonumber(armas[i].margem) or 20

                    local ammo = tonumber(armas[i].municao)
                    if ammo ~= nil then
                        ammo = ammo -1
                        if ammo==0 then
                            mesa.activeChat:enviarMensagem("Ataque " .. index .. " com " .. atk[index].nome .. " de " .. (sheet.nome or "Veículo") .. " última munição.")
                        elseif ammo < 0 then
                            mesa.activeChat:enviarMensagem("Ataque " .. index .. " com " .. atk[index].nome .. " de " .. (sheet.nome or "Veículo") .. " sem munição.");
                        end
                        armas[i].municao = ammo
                    end;

                    local coice = tonumber(armas[i].coice)
                    if coice ~= nil then 
                        local atk = (tonumber(armas[i].ataque) or 0)
                        armas[i].ataque = atk - coice
                    end
                else 
                    local recarga = tonumber(armas[i].recarga)
                    if recarga ~= nil then 
                        armas[i].municao = recarga
                    end
                end
            end;

            rollAtaque(atk, 1, index)
        end;

        function recursiveEnumPersonagensEmBibItem(bibItem, dest, dono)
            if bibItem.tipo == "personagem" and dono == nil and dono.loginDono == nil then
                if (bibItem.loginDono ~= nil) and (bibItem.loginDono ~= "") then
                    dest[#dest + 1] = bibItem;
                end;
            elseif bibItem.tipo == "personagem" then
                --showMessage(bibItem.dataType)
                if (bibItem.loginDono == dono.loginDono) and (bibItem.codigoInterno ~= dono.codigoInterno) then
                    dest[#dest + 1] = bibItem;
                end;
            else
                local filhos = bibItem.filhos;
                
                for i = 1, #filhos, 1 do
                    recursiveEnumPersonagensEmBibItem(filhos[i], dest, dono);
                end;
            end;
        end;

        function listAllCharacters()
            local mesa = Firecast.getMesaDe(sheet);
            local dono = Firecast.getPersonagemDe(sheet); -- Objeto Personagem
            --showMessage(dono.dataType); -- Nil
            --showMessage(dono.loginDono); -- ""

            local personagens = {};
            recursiveEnumPersonagensEmBibItem(mesa.biblioteca, personagens, dono);
            
            table.sort(personagens,
                function(left, right)
                    return Utils.compareStringPtBr(left.nome, right.nome) < 0;
                end);
                
            local nomes = {};
            local valores = {};
            
            nomes[1] = "-";
            valores[1] = "0";
            
            for i = 1, #personagens, 1 do
                nomes[#nomes + 1] = personagens[i].nome;
                valores[#valores + 1] = tostring(personagens[i].codigoInterno);
            end;
            
            self.cmbPersonagem.items = nomes;
            self.cmbPersonagem.values = valores;

            if #personagens == 1 then
                sheet.cmbPersonagem = valores[2];
                self.cmbPersonagem.text = nomes[2];
            end;
        end;

        ]]> 
    </script>

    <import file="../FichaStarfinder/Template.xml"/>
    <import file="../FichaStarfinder/PopUps.xml"/>

    <tabControl align="client" g-cnt-gutter="5">
        <tab title="Geral">
            <import file="geral.xml"/>
        </tab>
        <tab title="Anotações">
            <import file="../FichaStarfinder/10.Anotacoes.xml"/>
        </tab>
        <tab title="Creditos">
            <import file="../FichaStarfinder/Credits.xml"/>
        </tab>
    </tabControl>

    <dataLink field="level">
        <event name="onChange">
            if sheet==nil then return end;

            local level = tonumber(sheet.level) or 0;

            local nodes = NDB.getChildNodes(sheet.listaMods); 
            for i=1, #nodes, 1 do
                nodes[i].level = level;
            end;
            nodes = NDB.getChildNodes(sheet.listaEquips); 
            for i=1, #nodes, 1 do
                nodes[i].level = level;
            end
            nodes = NDB.getChildNodes(sheet.listaOutros); 
            for i=1, #nodes, 1 do
                nodes[i].level = level;
            end
        </event>
    </dataLink>

    <dataLink field="tamanho">
        <event name="onChange">
            if sheet==nil then return end;

            local tamanho = tonumber(sheet.tamanho) or 0;

            local nodes = NDB.getChildNodes(sheet.listaMods); 
            for i=1, #nodes, 1 do
                nodes[i].tamanho = tamanho;
            end;
            nodes = NDB.getChildNodes(sheet.listaEquips); 
            for i=1, #nodes, 1 do
                nodes[i].tamanho = tamanho;
            end
            nodes = NDB.getChildNodes(sheet.listaOutros); 
            for i=1, #nodes, 1 do
                nodes[i].tamanho = tamanho;
            end
        </event>
    </dataLink>

    <dataLink fields="{'precoBase','precoMult','precoMod','precoOutros','level'}">
        <event name="onChange">
            if sheet==nil then return end;

            local level = tonumber(sheet.level) or 1;
            local precoBase = tonumber(sheet.precoBase) or 0;
            local precoMult = tonumber(sheet.precoMult) or 1;
            local precoMod = tonumber(sheet.precoMod) or 0;
            local precoOutros = tonumber(sheet.precoOutros) or 0;

            sheet.preco = level * precoBase * precoMult + precoMod + precoOutros;
        </event>
    </dataLink>

    <dataLink fields="{'deslBase','deslBaseViagem','deslAdd','deslMult','deslOutros','deslOutrosViagem','quebrado'}">
        <event name="onChange">
            if sheet==nil then return end;

            local deslBase = tonumber(sheet.deslBase) or 0;
            local deslBaseViagem = tonumber(sheet.deslBaseViagem) or 0;
            local deslAdd = tonumber(sheet.deslAdd) or 0;
            local deslMult = tonumber(sheet.deslMult) or 1;
            local deslOutros = tonumber(sheet.deslOutros) or 0;
            local deslOutrosViagem = tonumber(sheet.deslOutrosViagem) or 0;

            if sheet.quebrado then deslMult = deslMult * 0.5 end;

            local desl = math.floor((deslBase + deslAdd) * deslMult + deslOutros + 0.000001);
            sheet.deslQuadrados = desl;
            sheet.deslMetros = desl * 1.5;
            sheet.deslViagem = deslBaseViagem * deslMult + deslOutrosViagem;
        </event>
    </dataLink>

    <dataLink fields="{'pilBase','pilotarAdd','pilOutros','quebrado'}">
        <event name="onChange">
            if sheet==nil then return end;

            local pilBase = tonumber(sheet.pilBase) or 0;
            local pilotarAdd = tonumber(sheet.pilotarAdd) or 0;
            local pilOutros = tonumber(sheet.pilOutros) or 0;

            local pen = 0;
            if sheet.quebrado then pen = -2 end;

            sheet.pilotarPen = pilBase + pilotarAdd + pilOutros + pen;
        </event>
    </dataLink>

    <dataLink fields="{'atkBase','ataqueAdd','atkOutros'}">
        <event name="onChange">
            if sheet==nil then return end;

            local atkBase = tonumber(sheet.atkBase) or 0;
            local ataqueAdd = tonumber(sheet.ataqueAdd) or 0;
            local atkOutros = tonumber(sheet.atkOutros) or 0;

            sheet.ataquePen = atkBase + ataqueAdd + atkOutros;
        </event>
    </dataLink>

    <dataLink fields="{'caeBase','caeAdd','caeMult','caeOutros','quebrado', 'tamanho','tempCA'}">
        <event name="onChange">
            if sheet==nil then return end;

            local caeBase = tonumber(sheet.caeBase) or 0;
            local caeAdd = tonumber(sheet.caeAdd) or 0;
            local caeMult = tonumber(sheet.caeMult) or 1;
            local caeOutros = tonumber(sheet.caeOutros) or 0;
            local caTemp = tonumber(sheet.tempCA) or 0;

            local tam = tonumber(sheet.tamanho) or 1
            local tamTable = {2,1,0,-1,-2,-4,-8}
            local tamanho = tamTable[tam]

            local pen = 0
            if sheet.quebrado then pen = -2 end;

            sheet.cae = math.floor((caeBase + caeAdd) * caeMult) + caeOutros + tamanho + caTemp + pen
        </event>
    </dataLink>
    <dataLink fields="{'cacBase','cacAdd','cacMult','cacOutros','quebrado','tamanho','tempCA'}">
        <event name="onChange">
            if sheet==nil then return end;

            local cacBase = tonumber(sheet.cacBase) or 0;
            local cacAdd = tonumber(sheet.cacAdd) or 0;
            local cacMult = tonumber(sheet.cacMult) or 1;
            local cacOutros = tonumber(sheet.cacOutros) or 0;
            local caTemp = tonumber(sheet.tempCA) or 0;

            local tam = tonumber(sheet.tamanho) or 1
            local tamTable = {2,1,0,-1,-2,-4,-8}
            local tamanho = tamTable[tam]

            local pen = 0
            if sheet.quebrado then pen = -2 end;

            sheet.cac = math.floor((cacBase + cacAdd) * cacMult) + cacOutros + tamanho + caTemp + pen
        </event>
    </dataLink>
    <dataLink fields="{'protBase','protAdd','protMult','protOutros','quebrado'}">
        <event name="onChange">
            if sheet==nil then return end;

            local protBase = tonumber(sheet.protBase) or 0;
            local protAdd = tonumber(sheet.protAdd) or 0;
            local protMult = tonumber(sheet.protMult) or 1;
            local protOutros = tonumber(sheet.protOutros) or 0;

            local pen = 0
            if sheet.quebrado then pen = -2 end;

            sheet.protecao = math.floor((protBase + protAdd) * protMult + protOutros + pen);
        </event>
    </dataLink>

    <dataLink fields="{'pvBase','pvAdd','pvMult','pvOutros','cobertura'}">
        <event name="onChange">
            if sheet==nil then return end;

            local pvBase = tonumber(sheet.pvBase) or 0;
            local pvAdd = tonumber(sheet.pvAdd) or 0;
            local pvMult = tonumber(sheet.pvMult) or 1;
            local pvOutros = tonumber(sheet.pvOutros) or 0;
            local cobertura = tonumber(sheet.cobertura) or 25;

            local total = ((pvBase + pvAdd) * pvMult + pvOutros) + 0.000001
            total = math.floor(total)

            local pv = math.floor(total * (100-cobertura) / 100)
            sheet.pv = pv;
            sheet.pe = total - pv;
        </event>
    </dataLink>
    <event name="onNodeReady">
        Internet.download("https://github.com/rrpgfirecast/firecast/blob/master/Plugins/Sheets/Ficha%20Starfinder/output/Ficha%20Starfinder.rpk?raw=true",
            function(stream, contentType)
                local info = Firecast.Plugins.getRPKDetails(stream);
                sheet.versionDownloaded = "VERSÃO DISPONÍVEL: " .. info.version;

                local installed = Firecast.Plugins.getInstalledPlugins();
                local myself;
                for i=1, #installed, 1 do
                    if installed[i].moduleId == info.moduleId then
                        myself = installed[i];
                        sheet.versionInstalled = "VERSÃO INSTALADA: " .. installed[i].version;
                    end;
                end;

                if sheet.noUpdate==true then return end;
                if myself~= nil and isNewVersion(myself.version, info.version) then
                    Dialogs.choose("Há uma nova versão(" .. info.version .. ") da Ficha Starfinder. Deseja instalar?",{"Sim", "Não", "Não perguntar novamente."},
                        function(selected, selectedIndex, selectedText)
                            if selected and selectedIndex == 1 then
                                GUI.openInBrowser('https://github.com/rrpgfirecast/firecast/blob/master/Plugins/Sheets/Ficha%20Starfinder/output/Ficha%20Starfinder.rpk?raw=true');
                            elseif selected and selectedIndex == 3 then
                                sheet.noUpdate = true;
                            end;
                        end);
                end;
            end,       
            function (errorMsg)
                --showMessage(errorMsg);
            end,       
            function (downloaded, total)
                -- esta função será chamada constantemente.
                -- dividir "downloaded" por "total" lhe dará uma porcentagem do download.
            end,
            "checkForModification");
    </event>
    <event name="onNodeReady">
        listAllCharacters();
    </event>
</form>
